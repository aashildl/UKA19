

#ifndef _UKA_H_
#define _UKA_H_

#define NUM_ROWS 7
#define NUM_LETTER_COLS 32


//0011 0000 0110 0110 0011 0000 0111 0000
//0011 0000 0110 0110 0110 0000 1111 1000
//0011 0000 0110 0110 1100 0000 1101 1000
//0011 0000 0110 0111 1000 0001 1000 1100
//0011 1101 1110 0110 1100 0001 1000 1100
//0011 1111 1110 0110 0110 0011 0000 0110
//0000 1111 1000 0110 0011 0011 0000 0110

//   (00110000011001100011000001110000), = 1617309808 (mirrored) 235693574 (235693580‬)
//   (00110000011001100110000011111000), = 1617322232 (mirrored) 520513030 (520,513,036)
//   (00110000011001101100000011011000), = 1617346776‬ (mirrored) 453207558‬ (453,207,564‬)
//   (00110000011001111000000110001100), = 1617396108 (mirrored) 830596614 (830,596,620‬)
//   (00111101111001101100000110001100), = 1617346956‬ (mirrored) 830694918 (830,695,356‬)
//   (00111111111001100110001100000110), = 818307846  (mirrored) 1623614220 (1,623,615,484‬)
//   (00001111100001100011001100000110)  = 528888582  (mirrored) 1624007160 (1624007152‬)


const uint32_t UKA_Letters [NUM_ROWS] = {1624007152, 1623615484, 830695356, 830596620, 453207564, 520513036, 235693580};

bool getBit(uint8_t row, uint8_t position) {
    if (row < NUM_ROWS && position < 32)
    {
        return (UKA_Letters[row] >> position) & 1;
    }
    return 0;
}


#endif // _UKA_H